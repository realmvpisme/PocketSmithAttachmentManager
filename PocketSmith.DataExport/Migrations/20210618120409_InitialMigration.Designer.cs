// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PocketSmith.DataExport;

namespace PocketSmith.DataExport.Migrations
{
    [DbContext(typeof(PocketSmithDbContext))]
    [Migration("20210618120409_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15");

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Account", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CurrentBalanceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentBalanceExchangeRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentBalanceInBaseCurrency")
                        .HasColumnType("TEXT");

                    b.Property<long?>("InstitutionId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsNetWorth")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SafeBalance")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SafeBalanceInBaseCurrency")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("StartingBalance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartingBalanceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Attachment", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ContentTypeMetaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TransactionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<long?>("VariantId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("VariantsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeMetaId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VariantsId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Category", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBill")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTransfer")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RefundBehaviour")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RollUp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_ContentTypeMeta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ContentTypeMetas");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Institution", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Transaction", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("AmountInBaseCurrency")
                        .HasColumnType("TEXT");

                    b.Property<long>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CheckNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ClosingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsTransfer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Labels")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("NeedsReview")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalPayee")
                        .HasColumnType("TEXT");

                    b.Property<string>("Payee")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UploadSource")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Variant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("LargeUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Account", b =>
                {
                    b.HasOne("PocketSmith.DataExport.Models.DB_Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Attachment", b =>
                {
                    b.HasOne("PocketSmith.DataExport.Models.DB_ContentTypeMeta", "ContentTypeMeta")
                        .WithMany("Attachments")
                        .HasForeignKey("ContentTypeMetaId");

                    b.HasOne("PocketSmith.DataExport.Models.DB_Transaction", "Transaction")
                        .WithMany("Attachments")
                        .HasForeignKey("TransactionId");

                    b.HasOne("PocketSmith.DataExport.Models.DB_Variant", "Variants")
                        .WithMany("Attachments")
                        .HasForeignKey("VariantsId");
                });

            modelBuilder.Entity("PocketSmith.DataExport.Models.DB_Transaction", b =>
                {
                    b.HasOne("PocketSmith.DataExport.Models.DB_Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PocketSmith.DataExport.Models.DB_Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
